// <auto-generated />
using System;
using DBCourse_Azuavchikova.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBCourse_Azuavchikova.Data.Migrations
{
    [DbContext(typeof(BusinesTripsPayments))]
    [Migration("20230314220005_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.BusinesTrip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Basis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BusinesTrips");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateEnter")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.TravelExpenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinesTripId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePayments")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameExpense")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PurposePayments")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SumPayments")
                        .HasColumnType("int");

                    b.Property<Guid>("TypesTravelExpensesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusinesTripId");

                    b.HasIndex("TypesTravelExpensesId");

                    b.ToTable("TravelExpenses");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.TypesTravelExpenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypesTravelExpenses");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.BusinesTrip", b =>
                {
                    b.HasOne("DBCourse_Azuavchikova.Data.Entities.Employee", "Employee")
                        .WithMany("BusinesTrips")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.Employee", b =>
                {
                    b.HasOne("DBCourse_Azuavchikova.Data.Entities.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.TravelExpenses", b =>
                {
                    b.HasOne("DBCourse_Azuavchikova.Data.Entities.BusinesTrip", "BusinesTrip")
                        .WithMany("TravelExpenses")
                        .HasForeignKey("BusinesTripId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DBCourse_Azuavchikova.Data.Entities.TypesTravelExpenses", "TypesTravelExpenses")
                        .WithMany("TravelExpenses")
                        .HasForeignKey("TypesTravelExpensesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BusinesTrip");

                    b.Navigation("TypesTravelExpenses");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.BusinesTrip", b =>
                {
                    b.Navigation("TravelExpenses");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.Employee", b =>
                {
                    b.Navigation("BusinesTrips");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DBCourse_Azuavchikova.Data.Entities.TypesTravelExpenses", b =>
                {
                    b.Navigation("TravelExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
